{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/theta_metrics_server/theta-guardian-monitor/src/Table.js\";\nimport React, { Component } from 'react';\n\nclass Table extends Component {\n  constructor(props) {\n    super(props); //since we are extending class Table so we have to use super in order to override Component class constructor\n\n    this.state = {\n      choosen: -1,\n      connected: []\n    };\n  }\n\n  handleClick(i) {\n    this.setState({\n      choosen: i\n    });\n  }\n\n  renderTableData() {\n    console.log(this.props.Nodes);\n    return this.props.Nodes.map((node, index) => {\n      var details = node.Details;\n      var i = index;\n      var bcolor = \"background-normal\";\n      console.log(\"xj1 i = \" + i + \" choosen is \" + this.state.choosen);\n\n      if (i == this.state.choosen) {\n        bcolor = \"background-blue\";\n      }\n\n      this.state.connected.map(num => {\n        bcolor = \"background-red\";\n      });\n      return React.createElement(\"tr\", {\n        key: details._id,\n        className: bcolor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, details._id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, details._ip), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, details._city), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, details._latitude), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, details._longitude), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"showPeersButtton\",\n        onClick: index => this.handleClick(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Show Peers\")));\n    });\n  }\n\n  renderTableHeader() {\n    let header = [\"ID\", \"IP\", \"CITY\", \"LATITUDE\", \"LONGITUDE\"];\n    return header.map((key, index) => {\n      return React.createElement(\"th\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, key.toUpperCase());\n    });\n  }\n\n  render() {\n    //Whenever our class runs, render method will be called automatically, it may have already defined in the constructor behind the scene.\n    if (this.props.Nodes) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"React Dynamic Table\"), React.createElement(\"table\", {\n        id: \"nodeTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.renderTableHeader()), this.renderTableData())));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/home/ubuntu/theta_metrics_server/theta-guardian-monitor/src/Table.js"],"names":["React","Component","Table","constructor","props","state","choosen","connected","handleClick","i","setState","renderTableData","console","log","Nodes","map","node","index","details","Details","bcolor","num","_id","_ip","_city","_latitude","_longitude","renderTableHeader","header","key","toUpperCase","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nclass Table extends Component {\n   constructor(props) {\n      super(props)//since we are extending class Table so we have to use super in order to override Component class constructor\n      this.state = {\n         choosen : -1,\n         connected : []\n      }\n   }\n\n   handleClick(i) {\n      this.setState({choosen : i})\n      \n   }\n\n   renderTableData() {\n      console.log(this.props.Nodes)\n      return this.props.Nodes.map((node, index) => {\n         var details = node.Details;\n         var i = index\n         var bcolor = \"background-normal\"\n         console.log(\"xj1 i = \" + i + \" choosen is \" + this.state.choosen)\n         if (i == this.state.choosen) {\n            bcolor = \"background-blue\"\n         }\n         this.state.connected.map((num) => {bcolor = \"background-red\"})\n         return (\n            <tr key={details._id} className={bcolor}>\n               <td>{details._id}</td>\n               <td>{details._ip}</td>\n               <td>{details._city}</td>\n               <td>{details._latitude}</td>\n               <td>{details._longitude}</td>\n               <td>\n                  <button className=\"showPeersButtton\" onClick={index => this.handleClick(i)} >\n                     Show Peers \n                  </button>\n               </td>\n            </tr>\n         )\n      })\n   }\n\n   renderTableHeader() {\n      let header = [\"ID\",\"IP\",\"CITY\", \"LATITUDE\", \"LONGITUDE\"]\n      return header.map((key, index) => {\n         return <th key={index}>{key.toUpperCase()}</th>\n      })\n   }\n\n   render() { //Whenever our class runs, render method will be called automatically, it may have already defined in the constructor behind the scene.\n      if (this.props.Nodes){\n         return (\n            <div>\n               <h1>React Dynamic Table</h1>\n               <table id='nodeTable'>\n                   <tbody>\n                       <tr>{this.renderTableHeader()}</tr>\n                       {this.renderTableData()}\n                   </tbody>\n               </table>\n            </div>\n         )\n      }\n      return(\n         <div/>\n      )\n   }\n}\n\nexport default Table"]},"metadata":{},"sourceType":"module"}