{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/theta_metrics_server/theta-guardian-monitor/src/App.js\";\nimport React, { Component } from \"react\";\nimport Table from './Table.js';\nimport Map from './Map.js'; // import logo from './logo.svg';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodes: [],\n      chosen: -1,\n      conn: []\n    };\n  }\n\n  async callAPI() {\n    const response = await fetch('http://34.220.181.170:9000/peers/get', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        example: 'data'\n      })\n    });\n    var resJson = await response.json();\n    var nodes = resJson.Nodes;\n\n    if (nodes && nodes.length > 0) {\n      var map = {};\n      nodes.map((node, index) => {\n        map[node.Details._id] = index;\n      });\n      this.aMap = map;\n      this.Nodes = nodes;\n      this.setState({\n        nodes: nodes,\n        chosen: -1,\n        conn: []\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.callAPI();\n  }\n\n  handleClick(i) {\n    var conn = [];\n    var node = this.Nodes[i];\n\n    node.Details._peer.map(id => {\n      if (this.aMap[id] !== undefined) {\n        conn.push(this.aMap[id]);\n      }\n    });\n\n    this.setState({\n      nodes: this.Nodes,\n      chosen: i,\n      connected: conn\n    });\n  }\n\n  render() {\n    console.log(this.state.Nodes);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Table, {\n      Nodes: this.state.Nodes,\n      conn: this.state.conn,\n      onClick: i => this.handleClick(i),\n      chosen: this.state.chosen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Map, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ubuntu/theta_metrics_server/theta-guardian-monitor/src/App.js"],"names":["React","Component","Table","Map","App","constructor","props","state","nodes","chosen","conn","callAPI","response","fetch","method","headers","body","JSON","stringify","example","resJson","json","Nodes","length","map","node","index","Details","_id","aMap","setState","componentDidMount","handleClick","i","_peer","id","undefined","push","connected","render","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Table from './Table.js'\nimport Map from './Map.js'\n// import logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n      super(props);\n      this.state = { nodes : [], chosen : -1, conn : []};\n  }\n\n  async callAPI() {\n    const response = await fetch('http://34.220.181.170:9000/peers/get', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ example: 'data' }),\n    })\n    var resJson = await response.json()\n    var nodes = resJson.Nodes\n     if (nodes && nodes.length > 0) {\n      var map = {}\n      nodes.map((node, index) => {\n        map[node.Details._id] = index\n      })\n      this.aMap = map\n      this.Nodes = nodes\n      this.setState({nodes : nodes, chosen : -1, conn : []})\n    }\n  }\n  \n  componentDidMount() {\n    this.callAPI();\n  }\n\n  handleClick(i) {\n    var conn = []\n    var node = this.Nodes[i]\n    node.Details._peer.map((id) => {\n       if (this.aMap[id] !== undefined) {\n          conn.push(this.aMap[id])\n       }\n    })\n    this.setState({nodes : this.Nodes, chosen : i, connected : conn})\n  }\n\n  render() {\n    console.log(this.state.Nodes)\n    return (\n      <div className=\"App\">\n        <Table Nodes={this.state.Nodes} conn = {this.state.conn} onClick={i => this.handleClick(i)} chosen={this.state.chosen}/>\n        <Map/>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}